{"version":3,"sources":["Context/CargoContext.jsx","api/api.js","components/Header/Header.tsx","components/Main/ShipmentInfo.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["CargoContext","React","createContext","companies","setCompanies","a","query","setQuery","CargoProvider","children","useState","JSON","parse","localStorage","getItem","value","useMemo","Provider","getShipments","url","fetch","then","response","ok","Error","status","statusText","json","Header","useContext","handleClickLoad","companis","className","to","action","type","placeholder","onChange","e","target","onClick","setItem","stringify","ShipmentInfo","props","company","cargoBoxes","setCargoBoxes","useEffect","boxes","handleChange","useCallback","event","name","href","email","Math","ceil","split","map","x","reduce","b","Navigation","isSelectedCompany","setIsSelectedCompany","setCompany","sortedCompanis","filter","toLowerCase","includes","length","id","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAEaA,EAAeC,IAAMC,cAAc,CAC9CC,UAAW,GACXC,aAAc,SAACC,KACfC,MAAO,GACPC,SAAU,SAACF,OAGAG,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9B,EAAkCC,mBAChCC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,IADnD,mBAAOX,EAAP,KAAkBC,EAAlB,KAGA,EAA0BM,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcC,EAAd,KAGMQ,EAAQC,mBAAS,WACrB,MAAO,CACLb,YACAC,eACAE,QACAC,cAED,CAACJ,EAAWG,IAEf,OACE,cAACN,EAAaiB,SAAd,CAAuBF,MAAOA,EAA9B,SACGN,KCdMS,G,MAAY,uCAAG,sBAAAb,EAAA,gFAXJc,EAYP,kBAXRC,MAAM,GAAD,OAHG,0DAGH,OAAeD,IACxBE,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,YAIM,iCAXL,IAACR,IAWI,OAAH,sDCPZS,EAAuB,WAClC,MAAqDC,qBAAW7B,GAAxDG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcG,EAAjC,EAAiCA,SAAUD,EAA3C,EAA2CA,MAErCwB,EAAe,uCAAG,4BAAAzB,EAAA,sEACCa,IADD,OAChBa,EADgB,OAEtB3B,EAAa2B,GAFS,2CAAH,qDASrB,OACE,yBAAQC,UAAU,SAAlB,UACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAD,CAASC,GAAG,IAAZ,6BAGF,sBAAMC,OAAO,IAAIF,UAAU,iBAA3B,SACE,uBACEA,UAAU,gBACVG,KAAK,SACLC,YAAY,SACZ,aAAW,SACXrB,MAAOT,EACP+B,SAAU,SAACC,GAAD,OAAK/B,EAAS+B,EAAEC,OAAOxB,YAIrC,sBAAKiB,UAAU,kBAAf,UACE,wBACEG,KAAK,SACLH,UAAU,sBACVQ,QAASV,EAHX,kBAOA,wBACEK,KAAK,SACLH,UAAU,sBACVQ,QAhCgB,WACtB3B,aAAa4B,QAAQ,YAAa9B,KAAK+B,UAAUvC,KA4B7C,yB,OC5BKwC,G,MAAgC,SAACC,GAC5C,IAAQC,EAAYD,EAAZC,QACR,EAAoCnC,mBAAS,IAA7C,mBAAOoC,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRD,EAAcF,EAAQI,SACrB,CAACJ,EAAQI,QAEZ,IAKkBA,EALZC,EAAeC,uBACnB,SAACC,GAAD,OAA0CL,EAAcK,EAAMb,OAAOxB,SACrE,CAACgC,IAaH,OACE,0BAASf,UAAU,WAAnB,UACE,oBAAIA,UAAU,iBAAd,SAAgCa,EAAQQ,OACxC,mBAAGrB,UAAU,kBAAkBsB,KAAI,iBAAYT,EAAQU,OAAvD,SAAiEV,EAAQU,QACzE,oBAAGvB,UAAU,iBAAb,4CAdciB,EAe4BH,EAd5CG,EACIO,KAAKC,KACHR,EACGS,MAAM,KACNC,KAAI,SAAAC,GAAC,OAAKA,KACVC,QAAO,SAACxD,EAAGyD,GAAJ,OAAUzD,EAAIyD,IAAG,GAAK,IAElC,MASF,4CACA,uBACE3B,KAAK,OACLkB,KAAK,QACLtC,MAAO+B,EACPT,SAAUa,SChCLa,G,MAA2B,WACtC,MAA6BlC,qBAAW7B,GAAhCG,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,MACnB,EAAkDI,oBAAS,GAA3D,mBAAOsD,EAAP,KAA0BC,EAA1B,KACA,EAA+BvD,qBAA/B,mBAAQmC,EAAR,KAAiBqB,EAAjB,KAEMC,EAAiBhE,EAAUiE,QAAO,SAACvB,GAAD,OACtCA,EAAQQ,KAAKgB,cAAcC,SAAShE,EAAM+D,kBAG5C,OACE,sBAAKrC,UAAU,OAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,qBAAIA,UAAU,kBAAd,WACImC,EAAeI,QAAU,yDAC1BJ,EAAeR,KAAI,SAACd,GAAD,OAClB,oBACEb,UAAU,kBAEVQ,QAAS,WACPyB,GAAsBD,GACtBE,EAAWrB,IALf,SAQE,cAAC,IAAD,CACEZ,GAAE,WAAMY,EAAQ2B,IADlB,SAIC3B,EAAQQ,QAVJR,EAAQ2B,UAenB,cAAC,IAAD,UACGL,EAAeR,KAAI,SAACd,GAAD,OAClB,cAAC,IAAD,CAEE4B,KAAI,WAAM5B,EAAQ2B,KADb3B,EAAQ2B,YAMpBR,GAAqBnB,GACpB,cAAC,EAAD,CACEmB,kBAAmBA,EACnBnB,QAASA,SCzCJ6B,MAdf,WACE,OACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,sBAAK1C,UAAU,MAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,Y,MCRR2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5c16d79a.chunk.js","sourcesContent":["import React, { useMemo, useState } from 'react'\n\nexport const CargoContext = React.createContext({\n  companies: [],\n  setCompanies: (a) => {},\n  query: '',\n  setQuery: (a) => {},\n});\n\nexport const CargoProvider = ({ children }) => {\n  const [companies, setCompanies] = useState(\n    JSON.parse(localStorage.getItem('companies')) || []\n  );\n  const [query, setQuery] = useState('');\n\n\n  const value = useMemo (() => {\n    return {\n      companies,\n      setCompanies,\n      query,\n      setQuery\n    };\n  }, [companies, query]);\n\n  return (\n    <CargoContext.Provider value={value}>\n      {children}\n    </CargoContext.Provider>\n\n  )\n};\n","const BASE_URL = \"https://AVronskyi.github.io/react-spacex-cargo-planner\"\n\nexport const request = (url) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      if(!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n};\n\nexport const getShipments = async () => {\n  return request(`/shipments.json`)\n};\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CargoContext } from '../../Context/CargoContext';\nimport './Header.scss'\nimport { getShipments } from '../../api/api'\n\nexport const Header: React.FC<{}> = () => {\n  const { companies, setCompanies, setQuery, query } = useContext(CargoContext);\n  \n  const handleClickLoad = async () => {\n    const companis = await getShipments();\n    setCompanies(companis);\n  };\n\n  const handleClickSave = () => {\n    localStorage.setItem('companies', JSON.stringify(companies));\n  }\n  \n  return (\n    <header className=\"header\">\n      <div className=\"header__brand\">\n        <NavLink to=\"/\">Cargo Planner</NavLink>\n      </div>\n      \n      <form action=\"#\" className=\"header__search\">\n        <input\n          className=\"header__input\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          value={query}\n          onChange={(e)=>setQuery(e.target.value)}\n        />\n      </form>\n      \n      <div className=\"header__buttons\">\n        <button\n          type=\"button\"\n          className=\"header__button-item\"\n          onClick={handleClickLoad}\n        >\n          Load\n        </button>\n        <button\n          type=\"button\"\n          className=\"header__button-item\"\n          onClick={handleClickSave}\n        >\n          Save\n        </button>\n      </div>\n    </header>\n  )\n}\n","import React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport './ShipmentInfo.scss'\n\ninterface Company {\n  id: string,\n  name: string,\n  email: string,\n  boxes: string,\n}\n\ntype Props = {\n  isSelectedCompany: boolean;\n  company: Company;\n}\n\nexport const ShipmentInfo: React.FC<Props> = (props) => {\n  const { company } = props;\n  const [cargoBoxes, setCargoBoxes] = useState('');\n\n  useEffect(() => {\n    setCargoBoxes(company.boxes)\n  }, [company.boxes]);\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => setCargoBoxes(event.target.value),\n    [setCargoBoxes]\n  );\n\n  const calcBays = (boxes: string | null): number => \n    boxes\n      ? Math.ceil(\n          boxes\n            .split(',')\n            .map(x => +x)\n            .reduce((a, b) => a + b, 0) / 10\n        )\n      : 0;\n\n  return (\n    <section className=\"shipment\">\n      <h2 className=\"shipment__name\">{company.name}</h2>\n      <a className=\"shipment__email\" href={`mailto:${company.email}`}>{company.email}</a>\n      <p className=\"shipment__bays\">\n        Number of required cargo bays {calcBays(cargoBoxes)}\n      </p>\n      <p>Cargo boxes</p>\n      <input\n        type=\"text\"\n        name=\"boxes\"\n        value={cargoBoxes}\n        onChange={handleChange}\n      />\n    </section>\n  )\n}\n","import React, { useContext, useState } from 'react';\nimport {\n  Routes,\n  NavLink,\n  Route,\n} from \"react-router-dom\";\n\nimport { CargoContext } from '../../Context/CargoContext';\nimport { ShipmentInfo } from '../Main/ShipmentInfo';\nimport './Navigation.scss';\n\ninterface Company {\n  id: string,\n  name: string,\n  email: string,\n  boxes: string,\n}\n\nexport const Navigation: React.FC<{}> = () => {\n  const { companies, query } = useContext(CargoContext);\n  const [isSelectedCompany, setIsSelectedCompany] = useState(false);\n  const [ company, setCompany] = useState<Company>();\n\n  const sortedCompanis = companies.filter((company: Company) =>\n    company.name.toLowerCase().includes(query.toLowerCase())\n  );\n\n  return (\n    <div className=\"main\">\n      <nav className=\"companies__container\">\n        <ul className=\"companies__List\">\n          {!sortedCompanis.length && <h3>Please load the company</h3>}\n          {sortedCompanis.map((company: Company) => (\n            <li\n              className=\"companies__item\"\n              key={company.id}\n              onClick={() => {\n                setIsSelectedCompany(!isSelectedCompany);\n                setCompany(company)\n              }}\n            >\n              <NavLink\n                to={`/${company.id}`}\n\n              >\n              {company.name}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n        <Routes>\n          {sortedCompanis.map((company: Company) => (\n            <Route\n              key={company.id}\n              path={`/${company.id}`}\n            />\n          ))}\n        </Routes>\n      </nav>\n      {isSelectedCompany && company && (\n        <ShipmentInfo \n          isSelectedCompany={isSelectedCompany}\n          company={company}\n        />\n      )}\n    </div>\n  )\n}\n","import React from 'react';\nimport { HashRouter as Router, } from 'react-router-dom';\nimport './App.scss'\nimport { Header } from './components/Header/Header';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { CargoProvider } from './Context/CargoContext';\n\nfunction App() {\n  return (\n    <CargoProvider>\n      <Router>\n        <div className=\"App\">\n        <Header />\n        <Navigation />\n        </div>\n      </Router>\n\n    </CargoProvider>\n  );\n}\n\nexport default App;\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}